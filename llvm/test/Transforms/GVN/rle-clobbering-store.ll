; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 3
; RUN: opt < %s -passes=gvn -S | FileCheck %s

define void @test_i8(ptr %a, ptr %b, ptr %c) {
; CHECK-LABEL: define void @test_i8(
; CHECK-SAME: ptr [[A:%.*]], ptr [[B:%.*]], ptr [[C:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = load i8, ptr [[A]], align 1
; CHECK-NEXT:    store i8 [[TMP0]], ptr [[B]], align 1
; CHECK-NEXT:    store i8 [[TMP0]], ptr [[C]], align 1
; CHECK-NEXT:    ret void
;
entry:
  %0 = load i8, ptr %a, align 1
  store i8 %0, ptr %b, align 1
  %1 = load i8, ptr %a, align 1
  store i8 %1, ptr %c, align 1
  ret void
}

define void @test_i32(ptr %a, ptr %b, ptr %c) {
; CHECK-LABEL: define void @test_i32(
; CHECK-SAME: ptr [[A:%.*]], ptr [[B:%.*]], ptr [[C:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = load i32, ptr [[A]], align 4
; CHECK-NEXT:    store i32 [[TMP0]], ptr [[B]], align 4
; CHECK-NEXT:    store i32 [[TMP0]], ptr [[C]], align 4
; CHECK-NEXT:    ret void
;
entry:
  %0 = load i32, ptr %a, align 4
  store i32 %0, ptr %b, align 4
  %1 = load i32, ptr %a, align 4
  store i32 %1, ptr %c, align 4
  ret void
}

define void @test_float(ptr %a, ptr %b, ptr %c) {
; CHECK-LABEL: define void @test_float(
; CHECK-SAME: ptr [[A:%.*]], ptr [[B:%.*]], ptr [[C:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = load float, ptr [[A]], align 4
; CHECK-NEXT:    store float [[TMP0]], ptr [[B]], align 4
; CHECK-NEXT:    store float [[TMP0]], ptr [[C]], align 4
; CHECK-NEXT:    ret void
;
entry:
  %0 = load float, ptr %a, align 4
  store float %0, ptr %b, align 4
  %1 = load float, ptr %a, align 4
  store float %1, ptr %c, align 4
  ret void
}

define void @test_unaligned(ptr %a, ptr %b, ptr %c) {
; CHECK-LABEL: define void @test_unaligned(
; CHECK-SAME: ptr [[A:%.*]], ptr [[B:%.*]], ptr [[C:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = load i32, ptr [[A]], align 4
; CHECK-NEXT:    store i32 [[TMP0]], ptr [[B]], align 2
; CHECK-NEXT:    [[TMP1:%.*]] = load i32, ptr [[A]], align 4
; CHECK-NEXT:    store i32 [[TMP1]], ptr [[C]], align 2
; CHECK-NEXT:    ret void
;
entry:
  %0 = load i32, ptr %a, align 4
  store i32 %0, ptr %b, align 2
  %1 = load i32, ptr %a, align 4
  store i32 %1, ptr %c, align 2
  ret void
}

define void @test_modify_between(ptr %a, ptr %b, ptr %c) {
; CHECK-LABEL: define void @test_modify_between(
; CHECK-SAME: ptr [[A:%.*]], ptr [[B:%.*]], ptr [[C:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = load i8, ptr [[A]], align 1
; CHECK-NEXT:    store i8 42, ptr [[C]], align 1
; CHECK-NEXT:    store i8 [[TMP0]], ptr [[B]], align 1
; CHECK-NEXT:    [[TMP1:%.*]] = load i8, ptr [[A]], align 1
; CHECK-NEXT:    store i8 [[TMP1]], ptr [[C]], align 1
; CHECK-NEXT:    ret void
;
entry:
  %0 = load i8, ptr %a, align 1
  store i8 42, ptr %c, align 1
  store i8 %0, ptr %b, align 1
  %1 = load i8, ptr %a, align 1
  store i8 %1, ptr %c, align 1
  ret void
}
