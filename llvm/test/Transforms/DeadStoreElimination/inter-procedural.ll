; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -passes=function-attrs,dse --enable-initialized-attr-improvement -S | FileCheck %s

; Function Attrs: mustprogress nounwind uwtable
define void @write_only_arg(ptr nocapture noundef writeonly initialized((0,2)) %ptr) {
  store i16 100, ptr %ptr
  ret void
}

; Function Attrs: mustprogress nounwind uwtable memory(none argmem: readwrite)
define i16 @write_then_read_arg(ptr nocapture noundef initialized((0,2),(4,8)) %ptr)  {
  store i16 10, ptr %ptr
  %l = load i16, ptr %ptr
  ret i16 %l
}

; Function Attrs: mustprogress nounwind uwtable
define i16 @write_only_caller() {
; CHECK-LABEL: @write_only_caller(
; CHECK-NEXT:    %ptr = alloca i16, align 2
; CHECK-NEXT:    call void @write_only_arg(ptr %ptr)
; CHECK-NEXT:    %l = load i16, ptr %ptr
; CHECK-NEXT:    ret i16 %l
;
  %ptr = alloca i16
  store i16 0, ptr %ptr
  call void @write_only_arg(ptr %ptr)
  %l = load i16, ptr %ptr
  ret i16 %l
}

; Function Attrs: mustprogress nounwind uwtable
define i16 @write_then_read_caller() {
; CHECK-LABEL: @write_then_read_caller(
; CHECK-NEXT:    %ptr = alloca i16, align 2
; CHECK-NEXT:    %call = call i16 @write_then_read_arg(ptr %ptr)
; CHECK-NEXT:    %l = load i16, ptr %ptr
; CHECK-NEXT:    ret i16 %l
;
  %ptr = alloca i16
  store i16 0, ptr %ptr
  %call = call i16 @write_then_read_arg(ptr %ptr)
  %l = load i16, ptr %ptr
  ret i16 %l
}
