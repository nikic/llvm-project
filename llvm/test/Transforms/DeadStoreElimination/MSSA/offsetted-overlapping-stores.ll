; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -dse -S | FileCheck %s

@BUFFER = external local_unnamed_addr global [0 x i8], align 1

define void @MissedDSEOpportunity2(i64 %0) {
;
; The DSE pass will try to kill the store of size i32 using the store of
; size i64 because they fully overlap, in fact:
;
; - they use the same base pointer (in SCEV style '@BUFFER + %0')
; - the offset between the two stores is 32 bits
; - the size of the earlier store is 32 bits
; - the size of the later store is 64 bits
;
; CHECK-LABEL: @MissedDSEOpportunity2(
; CHECK-NEXT:    [[TMP2:%.*]] = add i64 [[TMP0:%.*]], -8
; CHECK-NEXT:    [[TMP3:%.*]] = getelementptr inbounds [0 x i8], [0 x i8]* @BUFFER, i64 0, i64 [[TMP2]]
; CHECK-NEXT:    [[TMP4:%.*]] = bitcast i8* [[TMP3]] to i64*
; CHECK-NEXT:    store i64 0, i64* [[TMP4]], align 4
; CHECK-NEXT:    ret void
;
  %2 = add i64 %0, -8
  %3 = getelementptr inbounds [0 x i8], [0 x i8]* @BUFFER, i64 0, i64 %2
  %4 = bitcast i8* %3 to i64*
  %5 = add i64 %0, -4
  %6 = getelementptr inbounds [0 x i8], [0 x i8]* @BUFFER, i64 0, i64 %5
  %7 = bitcast i8* %6 to i32*
  store i32 1, i32* %7
  store i64 0, i64* %4
  ret void
}
