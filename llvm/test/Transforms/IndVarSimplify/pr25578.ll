; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 2
; RUN: opt < %s -passes=indvars -S | FileCheck %s
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"

declare void @use(i64 %x)

; CHECK-LABEL: @foo
define void @foo() {
; CHECK-LABEL: define void @foo() {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[L1_HEADER:%.*]]
; CHECK:       L1_header:
; CHECK-NEXT:    br label [[L2_HEADER:%.*]]
; CHECK:       L2_header:
; CHECK-NEXT:    [[I:%.*]] = phi i32 [ 0, [[L1_HEADER]] ], [ [[I_NEXT:%.*]], [[L2_LATCH:%.*]] ]
; CHECK-NEXT:    [[I_PROM:%.*]] = sext i32 [[I]] to i64
; CHECK-NEXT:    call void @use(i64 [[I_PROM]])
; CHECK-NEXT:    br label [[L3_HEADER:%.*]]
; CHECK:       L3_header:
; CHECK-NEXT:    br i1 false, label [[L3_LATCH:%.*]], label [[L2_EXITING_1:%.*]]
; CHECK:       L3_latch:
; CHECK-NEXT:    br i1 false, label [[L3_HEADER]], label [[L2_EXITING_2:%.*]]
; CHECK:       L2_exiting_1:
; CHECK-NEXT:    br i1 false, label [[L2_LATCH]], label [[L1_LATCH:%.*]]
; CHECK:       L2_exiting_2:
; CHECK-NEXT:    br i1 false, label [[L2_LATCH]], label [[L1_LATCH]]
; CHECK:       L2_latch:
; CHECK-NEXT:    [[I_NEXT]] = add nsw i32 [[I]], 1
; CHECK-NEXT:    br label [[L2_HEADER]]
; CHECK:       L1_latch:
; CHECK-NEXT:    [[I_LCSSA:%.*]] = phi i32 [ [[I]], [[L2_EXITING_1]] ], [ [[I]], [[L2_EXITING_2]] ]
; CHECK-NEXT:    br i1 true, label [[EXIT:%.*]], label [[L1_HEADER]]
; CHECK:       exit:
; CHECK-NEXT:    ret void
;
entry:
  br label %L1_header

L1_header:
  br label %L2_header

L2_header:
  %i = phi i32 [ 0, %L1_header ], [ %i_next, %L2_latch ]
  %i_prom = sext i32 %i to i64
  call void @use(i64 %i_prom)
  br label %L3_header

L3_header:
  br i1 undef, label %L3_latch, label %L2_exiting_1

L3_latch:
  br i1 undef, label %L3_header, label %L2_exiting_2

L2_exiting_1:
  br i1 undef, label %L2_latch, label %L1_latch

L2_exiting_2:
  br i1 undef, label %L2_latch, label %L1_latch

L2_latch:
  %i_next = add nsw i32 %i, 1
  br label %L2_header

L1_latch:

  %i_lcssa = phi i32 [ %i, %L2_exiting_1 ], [ %i, %L2_exiting_2 ]
  br i1 undef, label %exit, label %L1_header

exit:
  ret void
}
