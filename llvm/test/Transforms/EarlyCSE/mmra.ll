; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 4
; RUN: opt -passes=early-cse -S < %s | FileCheck %s

define i32 @loads(ptr%P) {
; CHECK-LABEL: define i32 @loads(
; CHECK-SAME: ptr [[P:%.*]]) {
; CHECK-NEXT:    [[V1:%.*]] = load i32, ptr [[P]], align 4
; CHECK-NEXT:    [[V2:%.*]] = load i32, ptr [[P]], align 4, !mmra [[META0:![0-9]+]]
; CHECK-NEXT:    [[DIFF:%.*]] = sub i32 [[V1]], [[V2]]
; CHECK-NEXT:    ret i32 [[DIFF]]
;
  %V1 = load i32, ptr %P
  %V2 = load i32, ptr %P, !mmra !0
  %Diff = sub i32 %V1, %V2
  ret i32 %Diff
}

define i32 @calls_readMem(ptr%P) {
; CHECK-LABEL: define i32 @calls_readMem(
; CHECK-SAME: ptr [[P:%.*]]) {
; CHECK-NEXT:    [[V1:%.*]] = call i32 @readsMem(ptr [[P]])
; CHECK-NEXT:    [[V2:%.*]] = call i32 @readsMem(ptr [[P]]), !mmra [[META0]]
; CHECK-NEXT:    [[DIFF:%.*]] = sub i32 [[V1]], [[V2]]
; CHECK-NEXT:    ret i32 [[DIFF]]
;
  %V1 = call i32 @readsMem(ptr %P)
  %V2 = call i32 @readsMem(ptr %P), !mmra !0
  %Diff = sub i32 %V1, %V2
  ret i32 %Diff
}

define i32 @calls_writeMem(ptr%P) {
; CHECK-LABEL: define i32 @calls_writeMem(
; CHECK-SAME: ptr [[P:%.*]]) {
; CHECK-NEXT:    [[V1:%.*]] = call i32 @writesMem(ptr [[P]])
; CHECK-NEXT:    [[V2:%.*]] = call i32 @writesMem(ptr [[P]]), !mmra [[META0]]
; CHECK-NEXT:    [[DIFF:%.*]] = sub i32 [[V1]], [[V2]]
; CHECK-NEXT:    ret i32 [[DIFF]]
;
  %V1 = call i32 @writesMem(ptr %P)
  %V2 = call i32 @writesMem(ptr %P), !mmra !0
  %Diff = sub i32 %V1, %V2
  ret i32 %Diff
}

declare i32 @readsMem(ptr) #0
declare i32 @writesMem(ptr) #1

!0 = !{!"foo", !"bar"}

attributes #0 = { memory(read) }
attributes #1 = { memory(write) }

;.
; CHECK: [[META0]] = !{!"foo", !"bar"}
;.
