; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=thumbv7-apple-darwin -arm-atomic-cfg-tidy=0 -mcpu=cortex-a8 -relocation-model=pic -frame-pointer=all | FileCheck %s
; rdar://7352504

%0 = type { i16, i8, i8 }
%1 = type { [2 x i32], [2 x i32] }
%2 = type { ptr }
%struct.FILE_POS = type { i8, i8, i16, i32 }
%struct.GAP = type { i8, i8, i16 }
%struct.LIST = type { ptr, ptr }
%struct.STYLE = type { %union.anon, %union.anon, i16, i16, i32 }
%struct.head_type = type { [2 x %struct.LIST], %union.FIRST_UNION, %union.SECOND_UNION, %union.THIRD_UNION, %union.FOURTH_UNION, ptr, %2, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32 }
%union.FIRST_UNION = type { %struct.FILE_POS }
%union.FOURTH_UNION = type { %struct.STYLE }
%union.SECOND_UNION = type { %0 }
%union.THIRD_UNION = type { %1 }
%union.anon = type { %struct.GAP }
%union.rec = type { %struct.head_type }

@zz_hold = external global ptr            ; <ptr> [#uses=2]
@zz_res = external global ptr             ; <ptr> [#uses=1]

define ptr @Manifest(ptr %x, ptr %env, ptr %style, ptr %bthr, ptr %fthr, ptr %target, ptr %crs, i32 %ok, i32 %need_expand, ptr %enclose, i32 %fcr) nounwind {
; CHECK-LABEL: Manifest:
; CHECK:       @ %bb.0: @ %entry
; CHECK-NEXT:    push {r4, r5, r6, r7, lr}
; CHECK-NEXT:    add r7, sp, #12
; CHECK-NEXT:    push.w {r8, r10, r11}
; CHECK-NEXT:    sub sp, #284
; CHECK-NEXT:    movs r6, #0
; CHECK-NEXT:    cmp r6, #0
; CHECK-NEXT:    ittt ne
; CHECK-NEXT:    addne sp, #284
; CHECK-NEXT:    popne.w {r8, r10, r11}
; CHECK-NEXT:    popne {r4, r5, r6, r7, pc}
; CHECK-NEXT:  LBB0_1: @ %entry
; CHECK-NEXT:    cmp.w r0, #450
; CHECK-NEXT:    bge LBB0_4
; CHECK-NEXT:  @ %bb.2: @ %entry
; CHECK-NEXT:    cmp r0, #209
; CHECK-NEXT:    ble LBB0_5
; CHECK-NEXT:  @ %bb.3: @ %entry
; CHECK-NEXT:    movw r5, :lower16:(L_zz_hold$non_lazy_ptr-(LPC0_0+4))
; CHECK-NEXT:    mov.w r9, #0
; CHECK-NEXT:    movt r5, :upper16:(L_zz_hold$non_lazy_ptr-(LPC0_0+4))
; CHECK-NEXT:    movw r6, :lower16:(L_zz_res$non_lazy_ptr-(LPC0_1+4))
; CHECK-NEXT:    movt r6, :upper16:(L_zz_res$non_lazy_ptr-(LPC0_1+4))
; CHECK-NEXT:  LPC0_0:
; CHECK-NEXT:    add r5, pc
; CHECK-NEXT:  LPC0_1:
; CHECK-NEXT:    add r6, pc
; CHECK-NEXT:    ldrd lr, r12, [r7, #24]
; CHECK-NEXT:    ldr r5, [r5]
; CHECK-NEXT:    ldr r6, [r6]
; CHECK-NEXT:    ldrd r10, r8, [r7, #16]
; CHECK-NEXT:    str.w r9, [r5]
; CHECK-NEXT:    str.w r9, [r6]
; CHECK-NEXT:    str r0, [r5]
; CHECK-NEXT:    ldr r0, [r7, #32]
; CHECK-NEXT:    ldrd r4, r11, [r7, #8]
; CHECK-NEXT:    strd r4, r11, [sp]
; CHECK-NEXT:    strd r10, r8, [sp, #8]
; CHECK-NEXT:    strd lr, r12, [sp, #16]
; CHECK-NEXT:    str r0, [sp, #24]
; CHECK-NEXT:    bl _Manifest
; CHECK-NEXT:    trap
; CHECK-NEXT:  LBB0_4: @ %entry
; CHECK-NEXT:    cmp.w r0, #560
; CHECK-NEXT:    itt ge
; CHECK-NEXT:    movge r0, #0
; CHECK-NEXT:    cmpge r0, #0
; CHECK-NEXT:  LBB0_5: @ %entry
; CHECK-NEXT:    trap
entry:
  %xgaps.i = alloca [32 x ptr], align 4   ; <ptr> [#uses=0]
  %ycomp.i = alloca [32 x ptr], align 4   ; <ptr> [#uses=0]
  br label %bb20

bb20:                                             ; preds = %entry
  switch i32 undef, label %bb1287 [
    i32 110, label %bb119
    i32 120, label %bb119
    i32 210, label %bb420
    i32 230, label %bb420
    i32 450, label %bb438
    i32 460, label %bb438
    i32 550, label %bb533
    i32 560, label %bb569
    i32 640, label %bb745
    i32 780, label %bb1098
  ]

bb119:                                            ; preds = %bb20, %bb20
  unreachable

bb420:                                            ; preds = %bb20, %bb20
  store volatile ptr null, ptr @zz_hold, align 4
  store ptr null, ptr @zz_res, align 4
  store volatile ptr %x, ptr @zz_hold, align 4
  %0 = call  ptr @Manifest(ptr undef, ptr %env, ptr %style, ptr %bthr, ptr %fthr, ptr %target, ptr %crs, i32 %ok, i32 %need_expand, ptr %enclose, i32 %fcr) nounwind ; <ptr> [#uses=0]
  unreachable

bb438:                                            ; preds = %bb20, %bb20
  unreachable

bb533:                                            ; preds = %bb20
  ret ptr %x

bb569:                                            ; preds = %bb20
  unreachable

bb745:                                            ; preds = %bb20
  unreachable

bb1098:                                           ; preds = %bb20
  unreachable

bb1287:                                           ; preds = %bb20
  unreachable
}
