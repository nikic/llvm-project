; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=i686-linux | FileCheck %s --check-prefixes=X86,X86-X87
; RUN: llc < %s -mtriple=i686-linux -mattr=+sse2 | FileCheck %s --check-prefixes=X86,X86-SSE
; RUN: llc < %s -mtriple=x86_64-linux | FileCheck %s --check-prefix=X64

;
; 32-bit float to signed integer
;

declare   i1 @llvm.fptosi.sat.i1.f32  (float)
declare   i8 @llvm.fptosi.sat.i8.f32  (float)
declare  i13 @llvm.fptosi.sat.i13.f32 (float)
declare  i16 @llvm.fptosi.sat.i16.f32 (float)
declare  i19 @llvm.fptosi.sat.i19.f32 (float)
declare  i32 @llvm.fptosi.sat.i32.f32 (float)
declare  i50 @llvm.fptosi.sat.i50.f32 (float)
declare  i64 @llvm.fptosi.sat.i64.f32 (float)
declare i100 @llvm.fptosi.sat.i100.f32(float)
declare i128 @llvm.fptosi.sat.i128.f32(float)

define i1 @test_signed_i1_f32(float %f) nounwind {
; X86-X87-LABEL: test_signed_i1_f32:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    pushl %ebx
; X86-X87-NEXT:    subl $8, %esp
; X86-X87-NEXT:    flds {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fists {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fld1
; X86-X87-NEXT:    fchs
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movb $-1, %dl
; X86-X87-NEXT:    jb .LBB0_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movb {{[0-9]+}}(%esp), %dl
; X86-X87-NEXT:  .LBB0_2:
; X86-X87-NEXT:    fldz
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $0, %ebx
; X86-X87-NEXT:    ja .LBB0_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %edx, %ebx
; X86-X87-NEXT:  .LBB0_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB0_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %ebx, %ecx
; X86-X87-NEXT:  .LBB0_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $8, %esp
; X86-X87-NEXT:    popl %ebx
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i1_f32:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    movss {{.*#+}} xmm0 = mem[0],zero,zero,zero
; X86-SSE-NEXT:    cvttss2si %xmm0, %ecx
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $255, %eax
; X86-SSE-NEXT:    cmovael %ecx, %eax
; X86-SSE-NEXT:    xorl %ecx, %ecx
; X86-SSE-NEXT:    xorps %xmm1, %xmm1
; X86-SSE-NEXT:    ucomiss %xmm1, %xmm0
; X86-SSE-NEXT:    cmoval %ecx, %eax
; X86-SSE-NEXT:    ucomiss %xmm0, %xmm0
; X86-SSE-NEXT:    cmovpl %ecx, %eax
; X86-SSE-NEXT:    # kill: def $al killed $al killed $eax
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i1_f32:
; X64:       # %bb.0:
; X64-NEXT:    cvttss2si %xmm0, %ecx
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $255, %eax
; X64-NEXT:    cmovael %ecx, %eax
; X64-NEXT:    xorl %ecx, %ecx
; X64-NEXT:    xorps %xmm1, %xmm1
; X64-NEXT:    ucomiss %xmm1, %xmm0
; X64-NEXT:    cmoval %ecx, %eax
; X64-NEXT:    ucomiss %xmm0, %xmm0
; X64-NEXT:    cmovpl %ecx, %eax
; X64-NEXT:    # kill: def $al killed $al killed $eax
; X64-NEXT:    retq
    %x = call i1 @llvm.fptosi.sat.i1.f32(float %f)
    ret i1 %x
}

define i8 @test_signed_i8_f32(float %f) nounwind {
; X86-X87-LABEL: test_signed_i8_f32:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $8, %esp
; X86-X87-NEXT:    flds {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fists {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movb $-128, %dl
; X86-X87-NEXT:    jb .LBB1_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movb {{[0-9]+}}(%esp), %dl
; X86-X87-NEXT:  .LBB1_2:
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movb $127, %cl
; X86-X87-NEXT:    ja .LBB1_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB1_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jnp .LBB1_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:  .LBB1_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $8, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i8_f32:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    movss {{.*#+}} xmm0 = mem[0],zero,zero,zero
; X86-SSE-NEXT:    cvttss2si %xmm0, %eax
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $128, %ecx
; X86-SSE-NEXT:    cmovael %eax, %ecx
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $127, %edx
; X86-SSE-NEXT:    cmovbel %ecx, %edx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    ucomiss %xmm0, %xmm0
; X86-SSE-NEXT:    cmovnpl %edx, %eax
; X86-SSE-NEXT:    # kill: def $al killed $al killed $eax
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i8_f32:
; X64:       # %bb.0:
; X64-NEXT:    cvttss2si %xmm0, %eax
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $128, %ecx
; X64-NEXT:    cmovael %eax, %ecx
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $127, %edx
; X64-NEXT:    cmovbel %ecx, %edx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    ucomiss %xmm0, %xmm0
; X64-NEXT:    cmovnpl %edx, %eax
; X64-NEXT:    # kill: def $al killed $al killed $eax
; X64-NEXT:    retq
    %x = call i8 @llvm.fptosi.sat.i8.f32(float %f)
    ret i8 %x
}

define i13 @test_signed_i13_f32(float %f) nounwind {
; X86-X87-LABEL: test_signed_i13_f32:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $8, %esp
; X86-X87-NEXT:    flds {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fists {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movw $-4096, %cx # imm = 0xF000
; X86-X87-NEXT:    jb .LBB2_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %ecx
; X86-X87-NEXT:  .LBB2_2:
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $4095, %edx # imm = 0xFFF
; X86-X87-NEXT:    ja .LBB2_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %ecx, %edx
; X86-X87-NEXT:  .LBB2_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB2_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB2_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $8, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i13_f32:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    movss {{.*#+}} xmm0 = mem[0],zero,zero,zero
; X86-SSE-NEXT:    cvttss2si %xmm0, %eax
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $61440, %ecx # imm = 0xF000
; X86-SSE-NEXT:    cmovael %eax, %ecx
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $4095, %edx # imm = 0xFFF
; X86-SSE-NEXT:    cmovbel %ecx, %edx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    ucomiss %xmm0, %xmm0
; X86-SSE-NEXT:    cmovnpl %edx, %eax
; X86-SSE-NEXT:    # kill: def $ax killed $ax killed $eax
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i13_f32:
; X64:       # %bb.0:
; X64-NEXT:    cvttss2si %xmm0, %eax
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $61440, %ecx # imm = 0xF000
; X64-NEXT:    cmovael %eax, %ecx
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $4095, %edx # imm = 0xFFF
; X64-NEXT:    cmovbel %ecx, %edx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    ucomiss %xmm0, %xmm0
; X64-NEXT:    cmovnpl %edx, %eax
; X64-NEXT:    # kill: def $ax killed $ax killed $eax
; X64-NEXT:    retq
    %x = call i13 @llvm.fptosi.sat.i13.f32(float %f)
    ret i13 %x
}

define i16 @test_signed_i16_f32(float %f) nounwind {
; X86-X87-LABEL: test_signed_i16_f32:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $8, %esp
; X86-X87-NEXT:    flds {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fists {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movw $-32768, %cx # imm = 0x8000
; X86-X87-NEXT:    jb .LBB3_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %ecx
; X86-X87-NEXT:  .LBB3_2:
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $32767, %edx # imm = 0x7FFF
; X86-X87-NEXT:    ja .LBB3_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %ecx, %edx
; X86-X87-NEXT:  .LBB3_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB3_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB3_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $8, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i16_f32:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    movss {{.*#+}} xmm0 = mem[0],zero,zero,zero
; X86-SSE-NEXT:    cvttss2si %xmm0, %eax
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $32768, %ecx # imm = 0x8000
; X86-SSE-NEXT:    cmovael %eax, %ecx
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $32767, %edx # imm = 0x7FFF
; X86-SSE-NEXT:    cmovbel %ecx, %edx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    ucomiss %xmm0, %xmm0
; X86-SSE-NEXT:    cmovnpl %edx, %eax
; X86-SSE-NEXT:    # kill: def $ax killed $ax killed $eax
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i16_f32:
; X64:       # %bb.0:
; X64-NEXT:    cvttss2si %xmm0, %eax
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $32768, %ecx # imm = 0x8000
; X64-NEXT:    cmovael %eax, %ecx
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $32767, %edx # imm = 0x7FFF
; X64-NEXT:    cmovbel %ecx, %edx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    ucomiss %xmm0, %xmm0
; X64-NEXT:    cmovnpl %edx, %eax
; X64-NEXT:    # kill: def $ax killed $ax killed $eax
; X64-NEXT:    retq
    %x = call i16 @llvm.fptosi.sat.i16.f32(float %f)
    ret i16 %x
}

define i19 @test_signed_i19_f32(float %f) nounwind {
; X86-X87-LABEL: test_signed_i19_f32:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $8, %esp
; X86-X87-NEXT:    flds {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fnstcw (%esp)
; X86-X87-NEXT:    movzwl (%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fistl {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw (%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $-262144, %ecx # imm = 0xFFFC0000
; X86-X87-NEXT:    jb .LBB4_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X86-X87-NEXT:  .LBB4_2:
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $262143, %edx # imm = 0x3FFFF
; X86-X87-NEXT:    ja .LBB4_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %ecx, %edx
; X86-X87-NEXT:  .LBB4_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB4_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB4_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $8, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i19_f32:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    movss {{.*#+}} xmm0 = mem[0],zero,zero,zero
; X86-SSE-NEXT:    cvttss2si %xmm0, %eax
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $-262144, %ecx # imm = 0xFFFC0000
; X86-SSE-NEXT:    cmovael %eax, %ecx
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $262143, %edx # imm = 0x3FFFF
; X86-SSE-NEXT:    cmovbel %ecx, %edx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    ucomiss %xmm0, %xmm0
; X86-SSE-NEXT:    cmovnpl %edx, %eax
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i19_f32:
; X64:       # %bb.0:
; X64-NEXT:    cvttss2si %xmm0, %eax
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $-262144, %ecx # imm = 0xFFFC0000
; X64-NEXT:    cmovael %eax, %ecx
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $262143, %edx # imm = 0x3FFFF
; X64-NEXT:    cmovbel %ecx, %edx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    ucomiss %xmm0, %xmm0
; X64-NEXT:    cmovnpl %edx, %eax
; X64-NEXT:    retq
    %x = call i19 @llvm.fptosi.sat.i19.f32(float %f)
    ret i19 %x
}

define i32 @test_signed_i32_f32(float %f) nounwind {
; X86-X87-LABEL: test_signed_i32_f32:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $8, %esp
; X86-X87-NEXT:    flds {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fnstcw (%esp)
; X86-X87-NEXT:    movzwl (%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fistl {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw (%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $-2147483648, %ecx # imm = 0x80000000
; X86-X87-NEXT:    jb .LBB5_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X86-X87-NEXT:  .LBB5_2:
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $2147483647, %edx # imm = 0x7FFFFFFF
; X86-X87-NEXT:    ja .LBB5_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %ecx, %edx
; X86-X87-NEXT:  .LBB5_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB5_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB5_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $8, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i32_f32:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    movss {{.*#+}} xmm0 = mem[0],zero,zero,zero
; X86-SSE-NEXT:    cvttss2si %xmm0, %eax
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $-2147483648, %ecx # imm = 0x80000000
; X86-SSE-NEXT:    cmovael %eax, %ecx
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $2147483647, %edx # imm = 0x7FFFFFFF
; X86-SSE-NEXT:    cmovbel %ecx, %edx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    ucomiss %xmm0, %xmm0
; X86-SSE-NEXT:    cmovnpl %edx, %eax
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i32_f32:
; X64:       # %bb.0:
; X64-NEXT:    cvttss2si %xmm0, %eax
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $-2147483648, %ecx # imm = 0x80000000
; X64-NEXT:    cmovael %eax, %ecx
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $2147483647, %edx # imm = 0x7FFFFFFF
; X64-NEXT:    cmovbel %ecx, %edx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    ucomiss %xmm0, %xmm0
; X64-NEXT:    cmovnpl %edx, %eax
; X64-NEXT:    retq
    %x = call i32 @llvm.fptosi.sat.i32.f32(float %f)
    ret i32 %x
}

;define i50 @test_signed_i50_f32(float %f) nounwind {
;    %x = call i50 @llvm.fptosi.sat.i50.f32(float %f)
;    ret i50 %x
;}
;
;define i64 @test_signed_i64_f32(float %f) nounwind {
;    %x = call i64 @llvm.fptosi.sat.i64.f32(float %f)
;    ret i64 %x
;}
;
;define i100 @test_signed_i100_f32(float %f) nounwind {
;    %x = call i100 @llvm.fptosi.sat.i100.f32(float %f)
;    ret i100 %x
;}
;
;define i128 @test_signed_i128_f32(float %f) nounwind {
;    %x = call i128 @llvm.fptosi.sat.i128.f32(float %f)
;    ret i128 %x
;}

;
; 64-bit float to signed integer
;

declare   i1 @llvm.fptosi.sat.i1.f64  (double)
declare   i8 @llvm.fptosi.sat.i8.f64  (double)
declare  i13 @llvm.fptosi.sat.i13.f64 (double)
declare  i16 @llvm.fptosi.sat.i16.f64 (double)
declare  i19 @llvm.fptosi.sat.i19.f64 (double)
declare  i32 @llvm.fptosi.sat.i32.f64 (double)
declare  i50 @llvm.fptosi.sat.i50.f64 (double)
declare  i64 @llvm.fptosi.sat.i64.f64 (double)
declare i100 @llvm.fptosi.sat.i100.f64(double)
declare i128 @llvm.fptosi.sat.i128.f64(double)

define i1 @test_signed_i1_f64(double %f) nounwind {
; X86-X87-LABEL: test_signed_i1_f64:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    pushl %ebx
; X86-X87-NEXT:    subl $8, %esp
; X86-X87-NEXT:    fldl {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fists {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fld1
; X86-X87-NEXT:    fchs
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movb $-1, %dl
; X86-X87-NEXT:    jb .LBB6_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movb {{[0-9]+}}(%esp), %dl
; X86-X87-NEXT:  .LBB6_2:
; X86-X87-NEXT:    fldz
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $0, %ebx
; X86-X87-NEXT:    ja .LBB6_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %edx, %ebx
; X86-X87-NEXT:  .LBB6_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB6_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %ebx, %ecx
; X86-X87-NEXT:  .LBB6_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $8, %esp
; X86-X87-NEXT:    popl %ebx
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i1_f64:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    movsd {{.*#+}} xmm0 = mem[0],zero
; X86-SSE-NEXT:    cvttsd2si %xmm0, %ecx
; X86-SSE-NEXT:    ucomisd {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $255, %eax
; X86-SSE-NEXT:    cmovael %ecx, %eax
; X86-SSE-NEXT:    xorl %ecx, %ecx
; X86-SSE-NEXT:    xorps %xmm1, %xmm1
; X86-SSE-NEXT:    ucomisd %xmm1, %xmm0
; X86-SSE-NEXT:    cmoval %ecx, %eax
; X86-SSE-NEXT:    ucomisd %xmm0, %xmm0
; X86-SSE-NEXT:    cmovpl %ecx, %eax
; X86-SSE-NEXT:    # kill: def $al killed $al killed $eax
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i1_f64:
; X64:       # %bb.0:
; X64-NEXT:    cvttsd2si %xmm0, %ecx
; X64-NEXT:    ucomisd {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $255, %eax
; X64-NEXT:    cmovael %ecx, %eax
; X64-NEXT:    xorl %ecx, %ecx
; X64-NEXT:    xorps %xmm1, %xmm1
; X64-NEXT:    ucomisd %xmm1, %xmm0
; X64-NEXT:    cmoval %ecx, %eax
; X64-NEXT:    ucomisd %xmm0, %xmm0
; X64-NEXT:    cmovpl %ecx, %eax
; X64-NEXT:    # kill: def $al killed $al killed $eax
; X64-NEXT:    retq
    %x = call i1 @llvm.fptosi.sat.i1.f64(double %f)
    ret i1 %x
}

define i8 @test_signed_i8_f64(double %f) nounwind {
; X86-X87-LABEL: test_signed_i8_f64:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $8, %esp
; X86-X87-NEXT:    fldl {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fists {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movb $-128, %dl
; X86-X87-NEXT:    jb .LBB7_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movb {{[0-9]+}}(%esp), %dl
; X86-X87-NEXT:  .LBB7_2:
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movb $127, %cl
; X86-X87-NEXT:    ja .LBB7_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB7_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jnp .LBB7_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:  .LBB7_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $8, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i8_f64:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    movsd {{.*#+}} xmm0 = mem[0],zero
; X86-SSE-NEXT:    cvttsd2si %xmm0, %eax
; X86-SSE-NEXT:    ucomisd {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $128, %ecx
; X86-SSE-NEXT:    cmovael %eax, %ecx
; X86-SSE-NEXT:    ucomisd {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $127, %edx
; X86-SSE-NEXT:    cmovbel %ecx, %edx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    ucomisd %xmm0, %xmm0
; X86-SSE-NEXT:    cmovnpl %edx, %eax
; X86-SSE-NEXT:    # kill: def $al killed $al killed $eax
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i8_f64:
; X64:       # %bb.0:
; X64-NEXT:    cvttsd2si %xmm0, %eax
; X64-NEXT:    ucomisd {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $128, %ecx
; X64-NEXT:    cmovael %eax, %ecx
; X64-NEXT:    ucomisd {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $127, %edx
; X64-NEXT:    cmovbel %ecx, %edx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    ucomisd %xmm0, %xmm0
; X64-NEXT:    cmovnpl %edx, %eax
; X64-NEXT:    # kill: def $al killed $al killed $eax
; X64-NEXT:    retq
    %x = call i8 @llvm.fptosi.sat.i8.f64(double %f)
    ret i8 %x
}

define i13 @test_signed_i13_f64(double %f) nounwind {
; X86-X87-LABEL: test_signed_i13_f64:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $8, %esp
; X86-X87-NEXT:    fldl {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fists {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movw $-4096, %cx # imm = 0xF000
; X86-X87-NEXT:    jb .LBB8_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %ecx
; X86-X87-NEXT:  .LBB8_2:
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $4095, %edx # imm = 0xFFF
; X86-X87-NEXT:    ja .LBB8_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %ecx, %edx
; X86-X87-NEXT:  .LBB8_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB8_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB8_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $8, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i13_f64:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    movsd {{.*#+}} xmm0 = mem[0],zero
; X86-SSE-NEXT:    cvttsd2si %xmm0, %eax
; X86-SSE-NEXT:    ucomisd {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $61440, %ecx # imm = 0xF000
; X86-SSE-NEXT:    cmovael %eax, %ecx
; X86-SSE-NEXT:    ucomisd {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $4095, %edx # imm = 0xFFF
; X86-SSE-NEXT:    cmovbel %ecx, %edx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    ucomisd %xmm0, %xmm0
; X86-SSE-NEXT:    cmovnpl %edx, %eax
; X86-SSE-NEXT:    # kill: def $ax killed $ax killed $eax
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i13_f64:
; X64:       # %bb.0:
; X64-NEXT:    cvttsd2si %xmm0, %eax
; X64-NEXT:    ucomisd {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $61440, %ecx # imm = 0xF000
; X64-NEXT:    cmovael %eax, %ecx
; X64-NEXT:    ucomisd {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $4095, %edx # imm = 0xFFF
; X64-NEXT:    cmovbel %ecx, %edx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    ucomisd %xmm0, %xmm0
; X64-NEXT:    cmovnpl %edx, %eax
; X64-NEXT:    # kill: def $ax killed $ax killed $eax
; X64-NEXT:    retq
    %x = call i13 @llvm.fptosi.sat.i13.f64(double %f)
    ret i13 %x
}

define i16 @test_signed_i16_f64(double %f) nounwind {
; X86-X87-LABEL: test_signed_i16_f64:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $8, %esp
; X86-X87-NEXT:    fldl {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fists {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movw $-32768, %cx # imm = 0x8000
; X86-X87-NEXT:    jb .LBB9_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %ecx
; X86-X87-NEXT:  .LBB9_2:
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $32767, %edx # imm = 0x7FFF
; X86-X87-NEXT:    ja .LBB9_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %ecx, %edx
; X86-X87-NEXT:  .LBB9_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB9_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB9_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $8, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i16_f64:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    movsd {{.*#+}} xmm0 = mem[0],zero
; X86-SSE-NEXT:    cvttsd2si %xmm0, %eax
; X86-SSE-NEXT:    ucomisd {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $32768, %ecx # imm = 0x8000
; X86-SSE-NEXT:    cmovael %eax, %ecx
; X86-SSE-NEXT:    ucomisd {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $32767, %edx # imm = 0x7FFF
; X86-SSE-NEXT:    cmovbel %ecx, %edx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    ucomisd %xmm0, %xmm0
; X86-SSE-NEXT:    cmovnpl %edx, %eax
; X86-SSE-NEXT:    # kill: def $ax killed $ax killed $eax
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i16_f64:
; X64:       # %bb.0:
; X64-NEXT:    cvttsd2si %xmm0, %eax
; X64-NEXT:    ucomisd {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $32768, %ecx # imm = 0x8000
; X64-NEXT:    cmovael %eax, %ecx
; X64-NEXT:    ucomisd {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $32767, %edx # imm = 0x7FFF
; X64-NEXT:    cmovbel %ecx, %edx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    ucomisd %xmm0, %xmm0
; X64-NEXT:    cmovnpl %edx, %eax
; X64-NEXT:    # kill: def $ax killed $ax killed $eax
; X64-NEXT:    retq
    %x = call i16 @llvm.fptosi.sat.i16.f64(double %f)
    ret i16 %x
}

define i19 @test_signed_i19_f64(double %f) nounwind {
; X86-X87-LABEL: test_signed_i19_f64:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $8, %esp
; X86-X87-NEXT:    fldl {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fnstcw (%esp)
; X86-X87-NEXT:    movzwl (%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fistl {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw (%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $-262144, %ecx # imm = 0xFFFC0000
; X86-X87-NEXT:    jb .LBB10_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X86-X87-NEXT:  .LBB10_2:
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $262143, %edx # imm = 0x3FFFF
; X86-X87-NEXT:    ja .LBB10_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %ecx, %edx
; X86-X87-NEXT:  .LBB10_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB10_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB10_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $8, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i19_f64:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    movsd {{.*#+}} xmm0 = mem[0],zero
; X86-SSE-NEXT:    cvttsd2si %xmm0, %eax
; X86-SSE-NEXT:    ucomisd {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $-262144, %ecx # imm = 0xFFFC0000
; X86-SSE-NEXT:    cmovael %eax, %ecx
; X86-SSE-NEXT:    ucomisd {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $262143, %edx # imm = 0x3FFFF
; X86-SSE-NEXT:    cmovbel %ecx, %edx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    ucomisd %xmm0, %xmm0
; X86-SSE-NEXT:    cmovnpl %edx, %eax
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i19_f64:
; X64:       # %bb.0:
; X64-NEXT:    cvttsd2si %xmm0, %eax
; X64-NEXT:    ucomisd {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $-262144, %ecx # imm = 0xFFFC0000
; X64-NEXT:    cmovael %eax, %ecx
; X64-NEXT:    ucomisd {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $262143, %edx # imm = 0x3FFFF
; X64-NEXT:    cmovbel %ecx, %edx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    ucomisd %xmm0, %xmm0
; X64-NEXT:    cmovnpl %edx, %eax
; X64-NEXT:    retq
    %x = call i19 @llvm.fptosi.sat.i19.f64(double %f)
    ret i19 %x
}

define i32 @test_signed_i32_f64(double %f) nounwind {
; X86-X87-LABEL: test_signed_i32_f64:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $8, %esp
; X86-X87-NEXT:    fldl {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fnstcw (%esp)
; X86-X87-NEXT:    movzwl (%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fistl {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw (%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $-2147483648, %ecx # imm = 0x80000000
; X86-X87-NEXT:    jb .LBB11_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X86-X87-NEXT:  .LBB11_2:
; X86-X87-NEXT:    fldl {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $2147483647, %edx # imm = 0x7FFFFFFF
; X86-X87-NEXT:    ja .LBB11_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %ecx, %edx
; X86-X87-NEXT:  .LBB11_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB11_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB11_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $8, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i32_f64:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    movsd {{.*#+}} xmm0 = mem[0],zero
; X86-SSE-NEXT:    cvttsd2si %xmm0, %eax
; X86-SSE-NEXT:    ucomisd {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $-2147483648, %ecx # imm = 0x80000000
; X86-SSE-NEXT:    cmovael %eax, %ecx
; X86-SSE-NEXT:    ucomisd {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $2147483647, %edx # imm = 0x7FFFFFFF
; X86-SSE-NEXT:    cmovbel %ecx, %edx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    ucomisd %xmm0, %xmm0
; X86-SSE-NEXT:    cmovnpl %edx, %eax
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i32_f64:
; X64:       # %bb.0:
; X64-NEXT:    cvttsd2si %xmm0, %eax
; X64-NEXT:    ucomisd {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $-2147483648, %ecx # imm = 0x80000000
; X64-NEXT:    cmovael %eax, %ecx
; X64-NEXT:    ucomisd {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $2147483647, %edx # imm = 0x7FFFFFFF
; X64-NEXT:    cmovbel %ecx, %edx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    ucomisd %xmm0, %xmm0
; X64-NEXT:    cmovnpl %edx, %eax
; X64-NEXT:    retq
    %x = call i32 @llvm.fptosi.sat.i32.f64(double %f)
    ret i32 %x
}

;define i50 @test_signed_i50_f64(double %f) nounwind {
;    %x = call i50 @llvm.fptosi.sat.i50.f64(double %f)
;    ret i50 %x
;}
;
;define i64 @test_signed_i64_f64(double %f) nounwind {
;    %x = call i64 @llvm.fptosi.sat.i64.f64(double %f)
;    ret i64 %x
;}
;
;define i100 @test_signed_i100_f64(double %f) nounwind {
;    %x = call i100 @llvm.fptosi.sat.i100.f64(double %f)
;    ret i100 %x
;}
;
;define i128 @test_signed_i128_f64(double %f) nounwind {
;    %x = call i128 @llvm.fptosi.sat.i128.f64(double %f)
;    ret i128 %x
;}

;
; 16-bit float to signed integer
;

declare   i1 @llvm.fptosi.sat.i1.f16  (half)
declare   i8 @llvm.fptosi.sat.i8.f16  (half)
declare  i13 @llvm.fptosi.sat.i13.f16 (half)
declare  i16 @llvm.fptosi.sat.i16.f16 (half)
declare  i19 @llvm.fptosi.sat.i19.f16 (half)
declare  i32 @llvm.fptosi.sat.i32.f16 (half)
declare  i50 @llvm.fptosi.sat.i50.f16 (half)
declare  i64 @llvm.fptosi.sat.i64.f16 (half)
declare i100 @llvm.fptosi.sat.i100.f16(half)
declare i128 @llvm.fptosi.sat.i128.f16(half)

define i1 @test_signed_i1_f16(half %f) nounwind {
; X86-X87-LABEL: test_signed_i1_f16:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    pushl %ebx
; X86-X87-NEXT:    subl $24, %esp
; X86-X87-NEXT:    flds {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fstps (%esp)
; X86-X87-NEXT:    calll __gnu_f2h_ieee
; X86-X87-NEXT:    movzwl %ax, %eax
; X86-X87-NEXT:    movl %eax, (%esp)
; X86-X87-NEXT:    calll __gnu_h2f_ieee
; X86-X87-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fists {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fld1
; X86-X87-NEXT:    fchs
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movb $-1, %dl
; X86-X87-NEXT:    jb .LBB12_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movb {{[0-9]+}}(%esp), %dl
; X86-X87-NEXT:  .LBB12_2:
; X86-X87-NEXT:    fldz
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $0, %ebx
; X86-X87-NEXT:    ja .LBB12_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %edx, %ebx
; X86-X87-NEXT:  .LBB12_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB12_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %ebx, %ecx
; X86-X87-NEXT:  .LBB12_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $24, %esp
; X86-X87-NEXT:    popl %ebx
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i1_f16:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    subl $12, %esp
; X86-SSE-NEXT:    movss {{.*#+}} xmm0 = mem[0],zero,zero,zero
; X86-SSE-NEXT:    movss %xmm0, (%esp)
; X86-SSE-NEXT:    calll __gnu_f2h_ieee
; X86-SSE-NEXT:    movzwl %ax, %eax
; X86-SSE-NEXT:    movl %eax, (%esp)
; X86-SSE-NEXT:    calll __gnu_h2f_ieee
; X86-SSE-NEXT:    fstps {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    movss {{.*#+}} xmm0 = mem[0],zero,zero,zero
; X86-SSE-NEXT:    cvttss2si %xmm0, %ecx
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $255, %eax
; X86-SSE-NEXT:    cmovael %ecx, %eax
; X86-SSE-NEXT:    xorl %ecx, %ecx
; X86-SSE-NEXT:    xorps %xmm1, %xmm1
; X86-SSE-NEXT:    ucomiss %xmm1, %xmm0
; X86-SSE-NEXT:    cmoval %ecx, %eax
; X86-SSE-NEXT:    ucomiss %xmm0, %xmm0
; X86-SSE-NEXT:    cmovpl %ecx, %eax
; X86-SSE-NEXT:    # kill: def $al killed $al killed $eax
; X86-SSE-NEXT:    addl $12, %esp
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i1_f16:
; X64:       # %bb.0:
; X64-NEXT:    pushq %rax
; X64-NEXT:    callq __gnu_f2h_ieee
; X64-NEXT:    movzwl %ax, %edi
; X64-NEXT:    callq __gnu_h2f_ieee
; X64-NEXT:    cvttss2si %xmm0, %ecx
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $255, %eax
; X64-NEXT:    cmovael %ecx, %eax
; X64-NEXT:    xorl %ecx, %ecx
; X64-NEXT:    xorps %xmm1, %xmm1
; X64-NEXT:    ucomiss %xmm1, %xmm0
; X64-NEXT:    cmoval %ecx, %eax
; X64-NEXT:    ucomiss %xmm0, %xmm0
; X64-NEXT:    cmovpl %ecx, %eax
; X64-NEXT:    # kill: def $al killed $al killed $eax
; X64-NEXT:    popq %rcx
; X64-NEXT:    retq
    %x = call i1 @llvm.fptosi.sat.i1.f16(half %f)
    ret i1 %x
}

define i8 @test_signed_i8_f16(half %f) nounwind {
; X86-X87-LABEL: test_signed_i8_f16:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $12, %esp
; X86-X87-NEXT:    flds {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fstps (%esp)
; X86-X87-NEXT:    calll __gnu_f2h_ieee
; X86-X87-NEXT:    movzwl %ax, %eax
; X86-X87-NEXT:    movl %eax, (%esp)
; X86-X87-NEXT:    calll __gnu_h2f_ieee
; X86-X87-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fists {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movb $-128, %dl
; X86-X87-NEXT:    jb .LBB13_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movb {{[0-9]+}}(%esp), %dl
; X86-X87-NEXT:  .LBB13_2:
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movb $127, %cl
; X86-X87-NEXT:    ja .LBB13_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB13_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jnp .LBB13_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:  .LBB13_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $12, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i8_f16:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    subl $12, %esp
; X86-SSE-NEXT:    movss {{.*#+}} xmm0 = mem[0],zero,zero,zero
; X86-SSE-NEXT:    movss %xmm0, (%esp)
; X86-SSE-NEXT:    calll __gnu_f2h_ieee
; X86-SSE-NEXT:    movzwl %ax, %eax
; X86-SSE-NEXT:    movl %eax, (%esp)
; X86-SSE-NEXT:    calll __gnu_h2f_ieee
; X86-SSE-NEXT:    fstps {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    movss {{.*#+}} xmm0 = mem[0],zero,zero,zero
; X86-SSE-NEXT:    cvttss2si %xmm0, %eax
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $128, %ecx
; X86-SSE-NEXT:    cmovael %eax, %ecx
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $127, %edx
; X86-SSE-NEXT:    cmovbel %ecx, %edx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    ucomiss %xmm0, %xmm0
; X86-SSE-NEXT:    cmovnpl %edx, %eax
; X86-SSE-NEXT:    # kill: def $al killed $al killed $eax
; X86-SSE-NEXT:    addl $12, %esp
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i8_f16:
; X64:       # %bb.0:
; X64-NEXT:    pushq %rax
; X64-NEXT:    callq __gnu_f2h_ieee
; X64-NEXT:    movzwl %ax, %edi
; X64-NEXT:    callq __gnu_h2f_ieee
; X64-NEXT:    cvttss2si %xmm0, %eax
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $128, %ecx
; X64-NEXT:    cmovael %eax, %ecx
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $127, %edx
; X64-NEXT:    cmovbel %ecx, %edx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    ucomiss %xmm0, %xmm0
; X64-NEXT:    cmovnpl %edx, %eax
; X64-NEXT:    # kill: def $al killed $al killed $eax
; X64-NEXT:    popq %rcx
; X64-NEXT:    retq
    %x = call i8 @llvm.fptosi.sat.i8.f16(half %f)
    ret i8 %x
}

define i13 @test_signed_i13_f16(half %f) nounwind {
; X86-X87-LABEL: test_signed_i13_f16:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $12, %esp
; X86-X87-NEXT:    flds {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fstps (%esp)
; X86-X87-NEXT:    calll __gnu_f2h_ieee
; X86-X87-NEXT:    movzwl %ax, %eax
; X86-X87-NEXT:    movl %eax, (%esp)
; X86-X87-NEXT:    calll __gnu_h2f_ieee
; X86-X87-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fists {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movw $-4096, %cx # imm = 0xF000
; X86-X87-NEXT:    jb .LBB14_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %ecx
; X86-X87-NEXT:  .LBB14_2:
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $4095, %edx # imm = 0xFFF
; X86-X87-NEXT:    ja .LBB14_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %ecx, %edx
; X86-X87-NEXT:  .LBB14_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB14_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB14_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $12, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i13_f16:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    subl $12, %esp
; X86-SSE-NEXT:    movss {{.*#+}} xmm0 = mem[0],zero,zero,zero
; X86-SSE-NEXT:    movss %xmm0, (%esp)
; X86-SSE-NEXT:    calll __gnu_f2h_ieee
; X86-SSE-NEXT:    movzwl %ax, %eax
; X86-SSE-NEXT:    movl %eax, (%esp)
; X86-SSE-NEXT:    calll __gnu_h2f_ieee
; X86-SSE-NEXT:    fstps {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    movss {{.*#+}} xmm0 = mem[0],zero,zero,zero
; X86-SSE-NEXT:    cvttss2si %xmm0, %eax
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $61440, %ecx # imm = 0xF000
; X86-SSE-NEXT:    cmovael %eax, %ecx
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $4095, %edx # imm = 0xFFF
; X86-SSE-NEXT:    cmovbel %ecx, %edx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    ucomiss %xmm0, %xmm0
; X86-SSE-NEXT:    cmovnpl %edx, %eax
; X86-SSE-NEXT:    # kill: def $ax killed $ax killed $eax
; X86-SSE-NEXT:    addl $12, %esp
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i13_f16:
; X64:       # %bb.0:
; X64-NEXT:    pushq %rax
; X64-NEXT:    callq __gnu_f2h_ieee
; X64-NEXT:    movzwl %ax, %edi
; X64-NEXT:    callq __gnu_h2f_ieee
; X64-NEXT:    cvttss2si %xmm0, %eax
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $61440, %ecx # imm = 0xF000
; X64-NEXT:    cmovael %eax, %ecx
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $4095, %edx # imm = 0xFFF
; X64-NEXT:    cmovbel %ecx, %edx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    ucomiss %xmm0, %xmm0
; X64-NEXT:    cmovnpl %edx, %eax
; X64-NEXT:    # kill: def $ax killed $ax killed $eax
; X64-NEXT:    popq %rcx
; X64-NEXT:    retq
    %x = call i13 @llvm.fptosi.sat.i13.f16(half %f)
    ret i13 %x
}

define i16 @test_signed_i16_f16(half %f) nounwind {
; X86-X87-LABEL: test_signed_i16_f16:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $12, %esp
; X86-X87-NEXT:    flds {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fstps (%esp)
; X86-X87-NEXT:    calll __gnu_f2h_ieee
; X86-X87-NEXT:    movzwl %ax, %eax
; X86-X87-NEXT:    movl %eax, (%esp)
; X86-X87-NEXT:    calll __gnu_h2f_ieee
; X86-X87-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fists {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movw $-32768, %cx # imm = 0x8000
; X86-X87-NEXT:    jb .LBB15_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %ecx
; X86-X87-NEXT:  .LBB15_2:
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $32767, %edx # imm = 0x7FFF
; X86-X87-NEXT:    ja .LBB15_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %ecx, %edx
; X86-X87-NEXT:  .LBB15_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB15_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB15_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $12, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i16_f16:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    subl $12, %esp
; X86-SSE-NEXT:    movss {{.*#+}} xmm0 = mem[0],zero,zero,zero
; X86-SSE-NEXT:    movss %xmm0, (%esp)
; X86-SSE-NEXT:    calll __gnu_f2h_ieee
; X86-SSE-NEXT:    movzwl %ax, %eax
; X86-SSE-NEXT:    movl %eax, (%esp)
; X86-SSE-NEXT:    calll __gnu_h2f_ieee
; X86-SSE-NEXT:    fstps {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    movss {{.*#+}} xmm0 = mem[0],zero,zero,zero
; X86-SSE-NEXT:    cvttss2si %xmm0, %eax
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $32768, %ecx # imm = 0x8000
; X86-SSE-NEXT:    cmovael %eax, %ecx
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $32767, %edx # imm = 0x7FFF
; X86-SSE-NEXT:    cmovbel %ecx, %edx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    ucomiss %xmm0, %xmm0
; X86-SSE-NEXT:    cmovnpl %edx, %eax
; X86-SSE-NEXT:    # kill: def $ax killed $ax killed $eax
; X86-SSE-NEXT:    addl $12, %esp
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i16_f16:
; X64:       # %bb.0:
; X64-NEXT:    pushq %rax
; X64-NEXT:    callq __gnu_f2h_ieee
; X64-NEXT:    movzwl %ax, %edi
; X64-NEXT:    callq __gnu_h2f_ieee
; X64-NEXT:    cvttss2si %xmm0, %eax
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $32768, %ecx # imm = 0x8000
; X64-NEXT:    cmovael %eax, %ecx
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $32767, %edx # imm = 0x7FFF
; X64-NEXT:    cmovbel %ecx, %edx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    ucomiss %xmm0, %xmm0
; X64-NEXT:    cmovnpl %edx, %eax
; X64-NEXT:    # kill: def $ax killed $ax killed $eax
; X64-NEXT:    popq %rcx
; X64-NEXT:    retq
    %x = call i16 @llvm.fptosi.sat.i16.f16(half %f)
    ret i16 %x
}

define i19 @test_signed_i19_f16(half %f) nounwind {
; X86-X87-LABEL: test_signed_i19_f16:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $12, %esp
; X86-X87-NEXT:    flds {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fstps (%esp)
; X86-X87-NEXT:    calll __gnu_f2h_ieee
; X86-X87-NEXT:    movzwl %ax, %eax
; X86-X87-NEXT:    movl %eax, (%esp)
; X86-X87-NEXT:    calll __gnu_h2f_ieee
; X86-X87-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fistl {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $-262144, %ecx # imm = 0xFFFC0000
; X86-X87-NEXT:    jb .LBB16_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X86-X87-NEXT:  .LBB16_2:
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $262143, %edx # imm = 0x3FFFF
; X86-X87-NEXT:    ja .LBB16_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %ecx, %edx
; X86-X87-NEXT:  .LBB16_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB16_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB16_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $12, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i19_f16:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    subl $12, %esp
; X86-SSE-NEXT:    movss {{.*#+}} xmm0 = mem[0],zero,zero,zero
; X86-SSE-NEXT:    movss %xmm0, (%esp)
; X86-SSE-NEXT:    calll __gnu_f2h_ieee
; X86-SSE-NEXT:    movzwl %ax, %eax
; X86-SSE-NEXT:    movl %eax, (%esp)
; X86-SSE-NEXT:    calll __gnu_h2f_ieee
; X86-SSE-NEXT:    fstps {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    movss {{.*#+}} xmm0 = mem[0],zero,zero,zero
; X86-SSE-NEXT:    cvttss2si %xmm0, %eax
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $-262144, %ecx # imm = 0xFFFC0000
; X86-SSE-NEXT:    cmovael %eax, %ecx
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $262143, %edx # imm = 0x3FFFF
; X86-SSE-NEXT:    cmovbel %ecx, %edx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    ucomiss %xmm0, %xmm0
; X86-SSE-NEXT:    cmovnpl %edx, %eax
; X86-SSE-NEXT:    addl $12, %esp
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i19_f16:
; X64:       # %bb.0:
; X64-NEXT:    pushq %rax
; X64-NEXT:    callq __gnu_f2h_ieee
; X64-NEXT:    movzwl %ax, %edi
; X64-NEXT:    callq __gnu_h2f_ieee
; X64-NEXT:    cvttss2si %xmm0, %eax
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $-262144, %ecx # imm = 0xFFFC0000
; X64-NEXT:    cmovael %eax, %ecx
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $262143, %edx # imm = 0x3FFFF
; X64-NEXT:    cmovbel %ecx, %edx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    ucomiss %xmm0, %xmm0
; X64-NEXT:    cmovnpl %edx, %eax
; X64-NEXT:    popq %rcx
; X64-NEXT:    retq
    %x = call i19 @llvm.fptosi.sat.i19.f16(half %f)
    ret i19 %x
}

define i32 @test_signed_i32_f16(half %f) nounwind {
; X86-X87-LABEL: test_signed_i32_f16:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $12, %esp
; X86-X87-NEXT:    flds {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fstps (%esp)
; X86-X87-NEXT:    calll __gnu_f2h_ieee
; X86-X87-NEXT:    movzwl %ax, %eax
; X86-X87-NEXT:    movl %eax, (%esp)
; X86-X87-NEXT:    calll __gnu_h2f_ieee
; X86-X87-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fistl {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $-2147483648, %ecx # imm = 0x80000000
; X86-X87-NEXT:    jb .LBB17_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X86-X87-NEXT:  .LBB17_2:
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $2147483647, %edx # imm = 0x7FFFFFFF
; X86-X87-NEXT:    ja .LBB17_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %ecx, %edx
; X86-X87-NEXT:  .LBB17_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB17_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB17_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $12, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i32_f16:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    subl $12, %esp
; X86-SSE-NEXT:    movss {{.*#+}} xmm0 = mem[0],zero,zero,zero
; X86-SSE-NEXT:    movss %xmm0, (%esp)
; X86-SSE-NEXT:    calll __gnu_f2h_ieee
; X86-SSE-NEXT:    movzwl %ax, %eax
; X86-SSE-NEXT:    movl %eax, (%esp)
; X86-SSE-NEXT:    calll __gnu_h2f_ieee
; X86-SSE-NEXT:    fstps {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    movss {{.*#+}} xmm0 = mem[0],zero,zero,zero
; X86-SSE-NEXT:    cvttss2si %xmm0, %eax
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $-2147483648, %ecx # imm = 0x80000000
; X86-SSE-NEXT:    cmovael %eax, %ecx
; X86-SSE-NEXT:    ucomiss {{\.LCPI.*}}, %xmm0
; X86-SSE-NEXT:    movl $2147483647, %edx # imm = 0x7FFFFFFF
; X86-SSE-NEXT:    cmovbel %ecx, %edx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    ucomiss %xmm0, %xmm0
; X86-SSE-NEXT:    cmovnpl %edx, %eax
; X86-SSE-NEXT:    addl $12, %esp
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i32_f16:
; X64:       # %bb.0:
; X64-NEXT:    pushq %rax
; X64-NEXT:    callq __gnu_f2h_ieee
; X64-NEXT:    movzwl %ax, %edi
; X64-NEXT:    callq __gnu_h2f_ieee
; X64-NEXT:    cvttss2si %xmm0, %eax
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $-2147483648, %ecx # imm = 0x80000000
; X64-NEXT:    cmovael %eax, %ecx
; X64-NEXT:    ucomiss {{.*}}(%rip), %xmm0
; X64-NEXT:    movl $2147483647, %edx # imm = 0x7FFFFFFF
; X64-NEXT:    cmovbel %ecx, %edx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    ucomiss %xmm0, %xmm0
; X64-NEXT:    cmovnpl %edx, %eax
; X64-NEXT:    popq %rcx
; X64-NEXT:    retq
    %x = call i32 @llvm.fptosi.sat.i32.f16(half %f)
    ret i32 %x
}

;define i50 @test_signed_i50_f16(half %f) nounwind {
;    %x = call i50 @llvm.fptosi.sat.i50.f16(half %f)
;    ret i50 %x
;}
;
;define i64 @test_signed_i64_f16(half %f) nounwind {
;    %x = call i64 @llvm.fptosi.sat.i64.f16(half %f)
;    ret i64 %x
;}
;
;define i100 @test_signed_i100_f16(half %f) nounwind {
;    %x = call i100 @llvm.fptosi.sat.i100.f16(half %f)
;    ret i100 %x
;}
;
;define i128 @test_signed_i128_f16(half %f) nounwind {
;    %x = call i128 @llvm.fptosi.sat.i128.f16(half %f)
;    ret i128 %x
;}

;
; 80-bit float to signed integer
;

declare   i1 @llvm.fptosi.sat.i1.f80  (x86_fp80)
declare   i8 @llvm.fptosi.sat.i8.f80  (x86_fp80)
declare  i13 @llvm.fptosi.sat.i13.f80 (x86_fp80)
declare  i16 @llvm.fptosi.sat.i16.f80 (x86_fp80)
declare  i19 @llvm.fptosi.sat.i19.f80 (x86_fp80)
declare  i32 @llvm.fptosi.sat.i32.f80 (x86_fp80)
declare  i50 @llvm.fptosi.sat.i50.f80 (x86_fp80)
declare  i64 @llvm.fptosi.sat.i64.f80 (x86_fp80)
declare i100 @llvm.fptosi.sat.i100.f80(x86_fp80)
declare i128 @llvm.fptosi.sat.i128.f80(x86_fp80)

define i1 @test_signed_i1_f80(x86_fp80 %f) nounwind {
; X86-X87-LABEL: test_signed_i1_f80:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    pushl %ebx
; X86-X87-NEXT:    subl $8, %esp
; X86-X87-NEXT:    fldt {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fists {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fld1
; X86-X87-NEXT:    fchs
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movb $-1, %dl
; X86-X87-NEXT:    jb .LBB18_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movb {{[0-9]+}}(%esp), %dl
; X86-X87-NEXT:  .LBB18_2:
; X86-X87-NEXT:    fldz
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $0, %ebx
; X86-X87-NEXT:    ja .LBB18_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %edx, %ebx
; X86-X87-NEXT:  .LBB18_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB18_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %ebx, %ecx
; X86-X87-NEXT:  .LBB18_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $8, %esp
; X86-X87-NEXT:    popl %ebx
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i1_f80:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    subl $8, %esp
; X86-SSE-NEXT:    fldt {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-SSE-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-SSE-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fists {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    movzbl {{[0-9]+}}(%esp), %ecx
; X86-SSE-NEXT:    fld1
; X86-SSE-NEXT:    fchs
; X86-SSE-NEXT:    fxch %st(1)
; X86-SSE-NEXT:    fucomi %st(1), %st
; X86-SSE-NEXT:    fstp %st(1)
; X86-SSE-NEXT:    movl $255, %eax
; X86-SSE-NEXT:    cmovael %ecx, %eax
; X86-SSE-NEXT:    xorl %ecx, %ecx
; X86-SSE-NEXT:    fldz
; X86-SSE-NEXT:    fxch %st(1)
; X86-SSE-NEXT:    fucomi %st(1), %st
; X86-SSE-NEXT:    fstp %st(1)
; X86-SSE-NEXT:    cmoval %ecx, %eax
; X86-SSE-NEXT:    fucompi %st(0), %st
; X86-SSE-NEXT:    cmovpl %ecx, %eax
; X86-SSE-NEXT:    # kill: def $al killed $al killed $eax
; X86-SSE-NEXT:    addl $8, %esp
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i1_f80:
; X64:       # %bb.0:
; X64-NEXT:    fldt {{[0-9]+}}(%rsp)
; X64-NEXT:    fnstcw -{{[0-9]+}}(%rsp)
; X64-NEXT:    movzwl -{{[0-9]+}}(%rsp), %eax
; X64-NEXT:    orl $3072, %eax # imm = 0xC00
; X64-NEXT:    movw %ax, -{{[0-9]+}}(%rsp)
; X64-NEXT:    fldcw -{{[0-9]+}}(%rsp)
; X64-NEXT:    fists -{{[0-9]+}}(%rsp)
; X64-NEXT:    fldcw -{{[0-9]+}}(%rsp)
; X64-NEXT:    movzbl -{{[0-9]+}}(%rsp), %ecx
; X64-NEXT:    fld1
; X64-NEXT:    fchs
; X64-NEXT:    fxch %st(1)
; X64-NEXT:    fucomi %st(1), %st
; X64-NEXT:    fstp %st(1)
; X64-NEXT:    movl $255, %eax
; X64-NEXT:    cmovael %ecx, %eax
; X64-NEXT:    xorl %ecx, %ecx
; X64-NEXT:    fldz
; X64-NEXT:    fxch %st(1)
; X64-NEXT:    fucomi %st(1), %st
; X64-NEXT:    fstp %st(1)
; X64-NEXT:    cmoval %ecx, %eax
; X64-NEXT:    fucompi %st(0), %st
; X64-NEXT:    cmovpl %ecx, %eax
; X64-NEXT:    # kill: def $al killed $al killed $eax
; X64-NEXT:    retq
    %x = call i1 @llvm.fptosi.sat.i1.f80(x86_fp80 %f)
    ret i1 %x
}

define i8 @test_signed_i8_f80(x86_fp80 %f) nounwind {
; X86-X87-LABEL: test_signed_i8_f80:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $8, %esp
; X86-X87-NEXT:    fldt {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fists {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movb $-128, %dl
; X86-X87-NEXT:    jb .LBB19_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movb {{[0-9]+}}(%esp), %dl
; X86-X87-NEXT:  .LBB19_2:
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movb $127, %cl
; X86-X87-NEXT:    ja .LBB19_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB19_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jnp .LBB19_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:  .LBB19_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $8, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i8_f80:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    subl $8, %esp
; X86-SSE-NEXT:    fldt {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-SSE-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-SSE-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fists {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    movzbl {{[0-9]+}}(%esp), %eax
; X86-SSE-NEXT:    flds {{\.LCPI.*}}
; X86-SSE-NEXT:    fxch %st(1)
; X86-SSE-NEXT:    fucomi %st(1), %st
; X86-SSE-NEXT:    fstp %st(1)
; X86-SSE-NEXT:    movl $128, %ecx
; X86-SSE-NEXT:    cmovael %eax, %ecx
; X86-SSE-NEXT:    flds {{\.LCPI.*}}
; X86-SSE-NEXT:    fxch %st(1)
; X86-SSE-NEXT:    fucomi %st(1), %st
; X86-SSE-NEXT:    fstp %st(1)
; X86-SSE-NEXT:    movl $127, %edx
; X86-SSE-NEXT:    cmovbel %ecx, %edx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    fucompi %st(0), %st
; X86-SSE-NEXT:    cmovnpl %edx, %eax
; X86-SSE-NEXT:    # kill: def $al killed $al killed $eax
; X86-SSE-NEXT:    addl $8, %esp
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i8_f80:
; X64:       # %bb.0:
; X64-NEXT:    fldt {{[0-9]+}}(%rsp)
; X64-NEXT:    fnstcw -{{[0-9]+}}(%rsp)
; X64-NEXT:    movzwl -{{[0-9]+}}(%rsp), %eax
; X64-NEXT:    orl $3072, %eax # imm = 0xC00
; X64-NEXT:    movw %ax, -{{[0-9]+}}(%rsp)
; X64-NEXT:    fldcw -{{[0-9]+}}(%rsp)
; X64-NEXT:    fists -{{[0-9]+}}(%rsp)
; X64-NEXT:    fldcw -{{[0-9]+}}(%rsp)
; X64-NEXT:    movzbl -{{[0-9]+}}(%rsp), %eax
; X64-NEXT:    flds {{.*}}(%rip)
; X64-NEXT:    fxch %st(1)
; X64-NEXT:    fucomi %st(1), %st
; X64-NEXT:    fstp %st(1)
; X64-NEXT:    movl $128, %ecx
; X64-NEXT:    cmovael %eax, %ecx
; X64-NEXT:    flds {{.*}}(%rip)
; X64-NEXT:    fxch %st(1)
; X64-NEXT:    fucomi %st(1), %st
; X64-NEXT:    fstp %st(1)
; X64-NEXT:    movl $127, %edx
; X64-NEXT:    cmovbel %ecx, %edx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    fucompi %st(0), %st
; X64-NEXT:    cmovnpl %edx, %eax
; X64-NEXT:    # kill: def $al killed $al killed $eax
; X64-NEXT:    retq
    %x = call i8 @llvm.fptosi.sat.i8.f80(x86_fp80 %f)
    ret i8 %x
}

define i13 @test_signed_i13_f80(x86_fp80 %f) nounwind {
; X86-X87-LABEL: test_signed_i13_f80:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $8, %esp
; X86-X87-NEXT:    fldt {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fists {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movw $-4096, %cx # imm = 0xF000
; X86-X87-NEXT:    jb .LBB20_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %ecx
; X86-X87-NEXT:  .LBB20_2:
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $4095, %edx # imm = 0xFFF
; X86-X87-NEXT:    ja .LBB20_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %ecx, %edx
; X86-X87-NEXT:  .LBB20_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB20_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB20_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $8, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i13_f80:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    subl $8, %esp
; X86-SSE-NEXT:    fldt {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-SSE-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-SSE-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fists {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    flds {{\.LCPI.*}}
; X86-SSE-NEXT:    fxch %st(1)
; X86-SSE-NEXT:    fucomi %st(1), %st
; X86-SSE-NEXT:    fstp %st(1)
; X86-SSE-NEXT:    movw $-4096, %ax # imm = 0xF000
; X86-SSE-NEXT:    jb .LBB20_2
; X86-SSE-NEXT:  # %bb.1:
; X86-SSE-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-SSE-NEXT:  .LBB20_2:
; X86-SSE-NEXT:    flds {{\.LCPI.*}}
; X86-SSE-NEXT:    fxch %st(1)
; X86-SSE-NEXT:    fucomi %st(1), %st
; X86-SSE-NEXT:    fstp %st(1)
; X86-SSE-NEXT:    movl $4095, %ecx # imm = 0xFFF
; X86-SSE-NEXT:    cmovbel %eax, %ecx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    fucompi %st(0), %st
; X86-SSE-NEXT:    cmovnpl %ecx, %eax
; X86-SSE-NEXT:    # kill: def $ax killed $ax killed $eax
; X86-SSE-NEXT:    addl $8, %esp
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i13_f80:
; X64:       # %bb.0:
; X64-NEXT:    fldt {{[0-9]+}}(%rsp)
; X64-NEXT:    fnstcw -{{[0-9]+}}(%rsp)
; X64-NEXT:    movzwl -{{[0-9]+}}(%rsp), %eax
; X64-NEXT:    orl $3072, %eax # imm = 0xC00
; X64-NEXT:    movw %ax, -{{[0-9]+}}(%rsp)
; X64-NEXT:    fldcw -{{[0-9]+}}(%rsp)
; X64-NEXT:    fists -{{[0-9]+}}(%rsp)
; X64-NEXT:    fldcw -{{[0-9]+}}(%rsp)
; X64-NEXT:    flds {{.*}}(%rip)
; X64-NEXT:    fxch %st(1)
; X64-NEXT:    fucomi %st(1), %st
; X64-NEXT:    fstp %st(1)
; X64-NEXT:    movw $-4096, %ax # imm = 0xF000
; X64-NEXT:    jb .LBB20_2
; X64-NEXT:  # %bb.1:
; X64-NEXT:    movzwl -{{[0-9]+}}(%rsp), %eax
; X64-NEXT:  .LBB20_2:
; X64-NEXT:    flds {{.*}}(%rip)
; X64-NEXT:    fxch %st(1)
; X64-NEXT:    fucomi %st(1), %st
; X64-NEXT:    fstp %st(1)
; X64-NEXT:    movl $4095, %ecx # imm = 0xFFF
; X64-NEXT:    cmovbel %eax, %ecx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    fucompi %st(0), %st
; X64-NEXT:    cmovnpl %ecx, %eax
; X64-NEXT:    # kill: def $ax killed $ax killed $eax
; X64-NEXT:    retq
    %x = call i13 @llvm.fptosi.sat.i13.f80(x86_fp80 %f)
    ret i13 %x
}

define i16 @test_signed_i16_f80(x86_fp80 %f) nounwind {
; X86-X87-LABEL: test_signed_i16_f80:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $8, %esp
; X86-X87-NEXT:    fldt {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fists {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movw $-32768, %cx # imm = 0x8000
; X86-X87-NEXT:    jb .LBB21_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movzwl {{[0-9]+}}(%esp), %ecx
; X86-X87-NEXT:  .LBB21_2:
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $32767, %edx # imm = 0x7FFF
; X86-X87-NEXT:    ja .LBB21_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %ecx, %edx
; X86-X87-NEXT:  .LBB21_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB21_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB21_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $8, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i16_f80:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    subl $8, %esp
; X86-SSE-NEXT:    fldt {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fnstcw {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-SSE-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-SSE-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fists {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    flds {{\.LCPI.*}}
; X86-SSE-NEXT:    fxch %st(1)
; X86-SSE-NEXT:    fucomi %st(1), %st
; X86-SSE-NEXT:    fstp %st(1)
; X86-SSE-NEXT:    movw $-32768, %ax # imm = 0x8000
; X86-SSE-NEXT:    jb .LBB21_2
; X86-SSE-NEXT:  # %bb.1:
; X86-SSE-NEXT:    movzwl {{[0-9]+}}(%esp), %eax
; X86-SSE-NEXT:  .LBB21_2:
; X86-SSE-NEXT:    flds {{\.LCPI.*}}
; X86-SSE-NEXT:    fxch %st(1)
; X86-SSE-NEXT:    fucomi %st(1), %st
; X86-SSE-NEXT:    fstp %st(1)
; X86-SSE-NEXT:    movl $32767, %ecx # imm = 0x7FFF
; X86-SSE-NEXT:    cmovbel %eax, %ecx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    fucompi %st(0), %st
; X86-SSE-NEXT:    cmovnpl %ecx, %eax
; X86-SSE-NEXT:    # kill: def $ax killed $ax killed $eax
; X86-SSE-NEXT:    addl $8, %esp
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i16_f80:
; X64:       # %bb.0:
; X64-NEXT:    fldt {{[0-9]+}}(%rsp)
; X64-NEXT:    fnstcw -{{[0-9]+}}(%rsp)
; X64-NEXT:    movzwl -{{[0-9]+}}(%rsp), %eax
; X64-NEXT:    orl $3072, %eax # imm = 0xC00
; X64-NEXT:    movw %ax, -{{[0-9]+}}(%rsp)
; X64-NEXT:    fldcw -{{[0-9]+}}(%rsp)
; X64-NEXT:    fists -{{[0-9]+}}(%rsp)
; X64-NEXT:    fldcw -{{[0-9]+}}(%rsp)
; X64-NEXT:    flds {{.*}}(%rip)
; X64-NEXT:    fxch %st(1)
; X64-NEXT:    fucomi %st(1), %st
; X64-NEXT:    fstp %st(1)
; X64-NEXT:    movw $-32768, %ax # imm = 0x8000
; X64-NEXT:    jb .LBB21_2
; X64-NEXT:  # %bb.1:
; X64-NEXT:    movzwl -{{[0-9]+}}(%rsp), %eax
; X64-NEXT:  .LBB21_2:
; X64-NEXT:    flds {{.*}}(%rip)
; X64-NEXT:    fxch %st(1)
; X64-NEXT:    fucomi %st(1), %st
; X64-NEXT:    fstp %st(1)
; X64-NEXT:    movl $32767, %ecx # imm = 0x7FFF
; X64-NEXT:    cmovbel %eax, %ecx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    fucompi %st(0), %st
; X64-NEXT:    cmovnpl %ecx, %eax
; X64-NEXT:    # kill: def $ax killed $ax killed $eax
; X64-NEXT:    retq
    %x = call i16 @llvm.fptosi.sat.i16.f80(x86_fp80 %f)
    ret i16 %x
}

define i19 @test_signed_i19_f80(x86_fp80 %f) nounwind {
; X86-X87-LABEL: test_signed_i19_f80:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $8, %esp
; X86-X87-NEXT:    fldt {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fnstcw (%esp)
; X86-X87-NEXT:    movzwl (%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fistl {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw (%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $-262144, %ecx # imm = 0xFFFC0000
; X86-X87-NEXT:    jb .LBB22_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X86-X87-NEXT:  .LBB22_2:
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $262143, %edx # imm = 0x3FFFF
; X86-X87-NEXT:    ja .LBB22_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %ecx, %edx
; X86-X87-NEXT:  .LBB22_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB22_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB22_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $8, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i19_f80:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    subl $8, %esp
; X86-SSE-NEXT:    fldt {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fnstcw (%esp)
; X86-SSE-NEXT:    movzwl (%esp), %eax
; X86-SSE-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-SSE-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fistl {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fldcw (%esp)
; X86-SSE-NEXT:    flds {{\.LCPI.*}}
; X86-SSE-NEXT:    fxch %st(1)
; X86-SSE-NEXT:    fucomi %st(1), %st
; X86-SSE-NEXT:    fstp %st(1)
; X86-SSE-NEXT:    movl $-262144, %eax # imm = 0xFFFC0000
; X86-SSE-NEXT:    jb .LBB22_2
; X86-SSE-NEXT:  # %bb.1:
; X86-SSE-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X86-SSE-NEXT:  .LBB22_2:
; X86-SSE-NEXT:    flds {{\.LCPI.*}}
; X86-SSE-NEXT:    fxch %st(1)
; X86-SSE-NEXT:    fucomi %st(1), %st
; X86-SSE-NEXT:    fstp %st(1)
; X86-SSE-NEXT:    movl $262143, %ecx # imm = 0x3FFFF
; X86-SSE-NEXT:    cmovbel %eax, %ecx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    fucompi %st(0), %st
; X86-SSE-NEXT:    cmovnpl %ecx, %eax
; X86-SSE-NEXT:    addl $8, %esp
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i19_f80:
; X64:       # %bb.0:
; X64-NEXT:    fldt {{[0-9]+}}(%rsp)
; X64-NEXT:    fnstcw -{{[0-9]+}}(%rsp)
; X64-NEXT:    movzwl -{{[0-9]+}}(%rsp), %eax
; X64-NEXT:    orl $3072, %eax # imm = 0xC00
; X64-NEXT:    movw %ax, -{{[0-9]+}}(%rsp)
; X64-NEXT:    fldcw -{{[0-9]+}}(%rsp)
; X64-NEXT:    fistl -{{[0-9]+}}(%rsp)
; X64-NEXT:    fldcw -{{[0-9]+}}(%rsp)
; X64-NEXT:    flds {{.*}}(%rip)
; X64-NEXT:    fxch %st(1)
; X64-NEXT:    fucomi %st(1), %st
; X64-NEXT:    fstp %st(1)
; X64-NEXT:    movl $-262144, %eax # imm = 0xFFFC0000
; X64-NEXT:    jb .LBB22_2
; X64-NEXT:  # %bb.1:
; X64-NEXT:    movl -{{[0-9]+}}(%rsp), %eax
; X64-NEXT:  .LBB22_2:
; X64-NEXT:    flds {{.*}}(%rip)
; X64-NEXT:    fxch %st(1)
; X64-NEXT:    fucomi %st(1), %st
; X64-NEXT:    fstp %st(1)
; X64-NEXT:    movl $262143, %ecx # imm = 0x3FFFF
; X64-NEXT:    cmovbel %eax, %ecx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    fucompi %st(0), %st
; X64-NEXT:    cmovnpl %ecx, %eax
; X64-NEXT:    retq
    %x = call i19 @llvm.fptosi.sat.i19.f80(x86_fp80 %f)
    ret i19 %x
}

define i32 @test_signed_i32_f80(x86_fp80 %f) nounwind {
; X86-X87-LABEL: test_signed_i32_f80:
; X86-X87:       # %bb.0:
; X86-X87-NEXT:    subl $8, %esp
; X86-X87-NEXT:    fldt {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fnstcw (%esp)
; X86-X87-NEXT:    movzwl (%esp), %eax
; X86-X87-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-X87-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fistl {{[0-9]+}}(%esp)
; X86-X87-NEXT:    fldcw (%esp)
; X86-X87-NEXT:    flds {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $-2147483648, %ecx # imm = 0x80000000
; X86-X87-NEXT:    jb .LBB23_2
; X86-X87-NEXT:  # %bb.1:
; X86-X87-NEXT:    movl {{[0-9]+}}(%esp), %ecx
; X86-X87-NEXT:  .LBB23_2:
; X86-X87-NEXT:    fldl {{\.LCPI.*}}
; X86-X87-NEXT:    fxch %st(1)
; X86-X87-NEXT:    fucom %st(1)
; X86-X87-NEXT:    fstp %st(1)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    movl $2147483647, %edx # imm = 0x7FFFFFFF
; X86-X87-NEXT:    ja .LBB23_4
; X86-X87-NEXT:  # %bb.3:
; X86-X87-NEXT:    movl %ecx, %edx
; X86-X87-NEXT:  .LBB23_4:
; X86-X87-NEXT:    fucomp %st(0)
; X86-X87-NEXT:    fnstsw %ax
; X86-X87-NEXT:    xorl %ecx, %ecx
; X86-X87-NEXT:    # kill: def $ah killed $ah killed $ax
; X86-X87-NEXT:    sahf
; X86-X87-NEXT:    jp .LBB23_6
; X86-X87-NEXT:  # %bb.5:
; X86-X87-NEXT:    movl %edx, %ecx
; X86-X87-NEXT:  .LBB23_6:
; X86-X87-NEXT:    movl %ecx, %eax
; X86-X87-NEXT:    addl $8, %esp
; X86-X87-NEXT:    retl
;
; X86-SSE-LABEL: test_signed_i32_f80:
; X86-SSE:       # %bb.0:
; X86-SSE-NEXT:    subl $8, %esp
; X86-SSE-NEXT:    fldt {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fnstcw (%esp)
; X86-SSE-NEXT:    movzwl (%esp), %eax
; X86-SSE-NEXT:    orl $3072, %eax # imm = 0xC00
; X86-SSE-NEXT:    movw %ax, {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fldcw {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fistl {{[0-9]+}}(%esp)
; X86-SSE-NEXT:    fldcw (%esp)
; X86-SSE-NEXT:    flds {{\.LCPI.*}}
; X86-SSE-NEXT:    fxch %st(1)
; X86-SSE-NEXT:    fucomi %st(1), %st
; X86-SSE-NEXT:    fstp %st(1)
; X86-SSE-NEXT:    movl $-2147483648, %eax # imm = 0x80000000
; X86-SSE-NEXT:    jb .LBB23_2
; X86-SSE-NEXT:  # %bb.1:
; X86-SSE-NEXT:    movl {{[0-9]+}}(%esp), %eax
; X86-SSE-NEXT:  .LBB23_2:
; X86-SSE-NEXT:    fldl {{\.LCPI.*}}
; X86-SSE-NEXT:    fxch %st(1)
; X86-SSE-NEXT:    fucomi %st(1), %st
; X86-SSE-NEXT:    fstp %st(1)
; X86-SSE-NEXT:    movl $2147483647, %ecx # imm = 0x7FFFFFFF
; X86-SSE-NEXT:    cmovbel %eax, %ecx
; X86-SSE-NEXT:    xorl %eax, %eax
; X86-SSE-NEXT:    fucompi %st(0), %st
; X86-SSE-NEXT:    cmovnpl %ecx, %eax
; X86-SSE-NEXT:    addl $8, %esp
; X86-SSE-NEXT:    retl
;
; X64-LABEL: test_signed_i32_f80:
; X64:       # %bb.0:
; X64-NEXT:    fldt {{[0-9]+}}(%rsp)
; X64-NEXT:    fnstcw -{{[0-9]+}}(%rsp)
; X64-NEXT:    movzwl -{{[0-9]+}}(%rsp), %eax
; X64-NEXT:    orl $3072, %eax # imm = 0xC00
; X64-NEXT:    movw %ax, -{{[0-9]+}}(%rsp)
; X64-NEXT:    fldcw -{{[0-9]+}}(%rsp)
; X64-NEXT:    fistl -{{[0-9]+}}(%rsp)
; X64-NEXT:    fldcw -{{[0-9]+}}(%rsp)
; X64-NEXT:    flds {{.*}}(%rip)
; X64-NEXT:    fxch %st(1)
; X64-NEXT:    fucomi %st(1), %st
; X64-NEXT:    fstp %st(1)
; X64-NEXT:    movl $-2147483648, %eax # imm = 0x80000000
; X64-NEXT:    jb .LBB23_2
; X64-NEXT:  # %bb.1:
; X64-NEXT:    movl -{{[0-9]+}}(%rsp), %eax
; X64-NEXT:  .LBB23_2:
; X64-NEXT:    fldl {{.*}}(%rip)
; X64-NEXT:    fxch %st(1)
; X64-NEXT:    fucomi %st(1), %st
; X64-NEXT:    fstp %st(1)
; X64-NEXT:    movl $2147483647, %ecx # imm = 0x7FFFFFFF
; X64-NEXT:    cmovbel %eax, %ecx
; X64-NEXT:    xorl %eax, %eax
; X64-NEXT:    fucompi %st(0), %st
; X64-NEXT:    cmovnpl %ecx, %eax
; X64-NEXT:    retq
    %x = call i32 @llvm.fptosi.sat.i32.f80(x86_fp80 %f)
    ret i32 %x
}

;define i50 @test_signed_i50_f80(x86_fp80 %f) nounwind {
;    %x = call i50 @llvm.fptosi.sat.i50.f80(x86_fp80 %f)
;    ret i50 %x
;}
;
;define i64 @test_signed_i64_f80(x86_fp80 %f) nounwind {
;    %x = call i64 @llvm.fptosi.sat.i64.f80(x86_fp80 %f)
;    ret i64 %x
;}
;
;define i100 @test_signed_i100_f80(x86_fp80 %f) nounwind {
;    %x = call i100 @llvm.fptosi.sat.i100.f80(x86_fp80 %f)
;    ret i100 %x
;}
;
;define i128 @test_signed_i128_f80(x86_fp80 %f) nounwind {
;    %x = call i128 @llvm.fptosi.sat.i128.f80(x86_fp80 %f)
;    ret i128 %x
;}
