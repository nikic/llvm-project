set(LLVM_TARGET_DEFINITIONS Attributes.td)
tablegen(LLVM Attributes.inc -gen-attrs)

set(LLVM_TARGET_DEFINITIONS Intrinsics.td)
tablegen(LLVM IntrinsicImpl.inc -gen-intrinsic-impl)
tablegen(LLVM IntrinsicEnums.inc -gen-intrinsic-enums)
tablegen(LLVM IntrinsicsAArch64.h -gen-intrinsic-enums -intrinsic-prefix=aarch64)
tablegen(LLVM IntrinsicsAMDGPU.h -gen-intrinsic-enums -intrinsic-prefix=amdgcn)
tablegen(LLVM IntrinsicsARM.h -gen-intrinsic-enums -intrinsic-prefix=arm)
tablegen(LLVM IntrinsicsBPF.h -gen-intrinsic-enums -intrinsic-prefix=bpf)
tablegen(LLVM IntrinsicsHexagon.h -gen-intrinsic-enums -intrinsic-prefix=hexagon)
tablegen(LLVM IntrinsicsMips.h -gen-intrinsic-enums -intrinsic-prefix=mips)
tablegen(LLVM IntrinsicsNVPTX.h -gen-intrinsic-enums -intrinsic-prefix=nvvm)
tablegen(LLVM IntrinsicsPowerPC.h -gen-intrinsic-enums -intrinsic-prefix=ppc)
tablegen(LLVM IntrinsicsR600.h -gen-intrinsic-enums -intrinsic-prefix=r600)
tablegen(LLVM IntrinsicsRISCV.h -gen-intrinsic-enums -intrinsic-prefix=riscv)
tablegen(LLVM IntrinsicsSPIRV.h -gen-intrinsic-enums -intrinsic-prefix=spv)
tablegen(LLVM IntrinsicsS390.h -gen-intrinsic-enums -intrinsic-prefix=s390)
tablegen(LLVM IntrinsicsWebAssembly.h -gen-intrinsic-enums -intrinsic-prefix=wasm)
tablegen(LLVM IntrinsicsX86.h -gen-intrinsic-enums -intrinsic-prefix=x86)
tablegen(LLVM IntrinsicsXCore.h -gen-intrinsic-enums -intrinsic-prefix=xcore)
tablegen(LLVM IntrinsicsVE.h -gen-intrinsic-enums -intrinsic-prefix=ve)
add_public_tablegen_target(intrinsics_gen)


# TODO: Sanitize Trait list
set(ENABLED_TRAITS_FILE ${CMAKE_CURRENT_BINARY_DIR}/Traits/EnabledTraits.def)
add_custom_target(enabled_traits DEPENDS ${ENABLED_TRAITS_FILE})

set(ENABLED_TRAITS_CONTENT "#undef ENABLE_TRAIT")
foreach(t ${LLVM_OPTIMIZER_TRAITS_TO_INSTANTIATE})
  set(ENABLED_TRAITS_CONTENT "ENABLE_TRAIT(${t})\n${ENABLED_TRAITS_CONTENT}")
endforeach(t)
file(GENERATE OUTPUT ${ENABLED_TRAITS_FILE} CONTENT ${ENABLED_TRAITS_CONTENT})

set_property(DIRECTORY APPEND PROPERTY ADDITIONAL_MAKE_CLEAN_FILES ${ENABLED_TRAITS_FILE})
if(LLVM_COMMON_DEPENDS)
  add_dependencies(enabled_traits ${LLVM_COMMON_DEPENDS})
endif()
set(LLVM_COMMON_DEPENDS ${LLVM_COMMON_DEPENDS} enabled_traits PARENT_SCOPE)
